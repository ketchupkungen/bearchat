{"version":3,"sources":["firebase.js","components/SidePanel/UserPanel.js","actions/index.js","actions/types.js","components/SidePanel/Channels.js","components/SidePanel/DirectMessages.js","components/SidePanel/Starred.js","components/SidePanel/SidePanel.js","components/MetaPanel/MetaPanel.js","components/Messages/MessagesHeader.js","components/Messages/FileModal.js","components/Messages/ProgressBar.js","components/Messages/MessageForm.js","components/Messages/Message.js","components/Messages/Typing.js","components/Messages/Skeleton.js","components/Messages/Messages.js","components/App.js","components/Profile/Profile.js","components/Auth/FooterPart.js","components/Auth/Login.js","components/Auth/Register.js","Spinner.js","registerServiceWorker.js","reducers/index.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","UserPanel","state","user","_this","props","currentUser","modal","previewImage","croppedImage","blob","uploadedCroppedImage","storageRef","storage","ref","userRef","auth","usersRef","database","metadata","contentType","openModal","setState","closeModal","uploadCroppedImage","_this$state","child","concat","uid","put","then","snap","getDownloadURL","downloadURL","changeAvatar","updateProfile","photoURL","console","log","catch","err","error","update","avatar","handleChange","event","file","target","files","reader","FileReader","readAsDataURL","addEventListener","result","handleCropImage","avatarEditor","getImageScaledToCanvas","toBlob","imageUrl","URL","createObjectURL","handleSignout","signOut","toggle","_this2","this","_this$state2","react_default","a","createElement","mdbreact_esm","className","caret","color","src","displayName","basic","disabled","onClick","divider","contentClassName","isOpen","onChange","type","label","style","paddingBottom","dist_default","node","image","width","height","border","borderRadius","scale","display","marginLeft","marginRight","outline","React","Component","setCurrentChannel","channel","payload","currentChannel","setPrivateChannel","isPrivateChannel","Channels","activeChannel","channels","channelName","channelDetails","channelsRef","messagesRef","typingRef","notifications","firstLoad","collapseID","addListeners","loadedChannels","on","push","val","setFirstChannel","addNotificationListener","key","channelId","handleNotifications","id","currentChannelId","lastTotal","index","findIndex","notification","total","numChildren","count","lastKnownTotal","removeListeners","off","forEach","firstChannel","length","setActiveChannel","addChannel","newChannel","name","details","createdBy","handleSubmit","preventDefault","isFormValid","Object","defineProperty","value","changeChannel","remove","clearNotifications","updatedNotifications","toConsumableArray","getNotificationCount","displayChannels","map","active","background","_ref","toggleCollapse","prevState","Fragment","onSubmit","icon","connect","DirectMessages","users","connectedRef","presenceRef","currentUserUid","loadedUsers","set","onDisconnect","addStatusToUser","userId","connected","arguments","undefined","updatedUsers","reduce","acc","isUserOnline","status","channelData","getChannelId","currentUserId","opacity","fontStyle","Starred","starredChannels","removeListener","starredChannel","objectSpread","channelToRemove","filteredChannels","filter","SidePanel","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","show","toggleSidebar","size","Transition","in","timeout","SidePanel_UserPanel","SidePanel_Starred","SidePanel_Channels","SidePanel_DirectMessages","MetaPanel","privateChannel","activeIndex","setActiveIndex","titleProps","newIndex","formatCount","num","displayTopPosters","posts","entries","sort","b","i","_ref2","slicedToArray","slice","userPosts","backgroundColor","float","MessagesHeader","_this$props","numUniqueUsers","handleSearchChange","searchLoading","handleStar","isChannelStarred","react_router_dom","dark","expand","navbar","left","to","right","waves","loading","placeholder","aria-label","nav","components_MetaPanel_MetaPanel","FileModal","authorized","addFile","sendFile","uploadFile","isAuthorized","mime","lookup","clearFile","filename","includes","_this$props2","ProgressBar","uploadState","percentUploaded","material","animated","percent","MessageForm","uploadTask","message","errors","emojiPicker","handleKeyDown","keyCode","sendMessage","handleTogglePicker","handleAddEmoji","emoji","oldMessage","newMessage","colonToUnicode","colons","setTimeout","messageInputRef","focus","replace","x","emojiIndex","emojis","unicode","native","createMessage","fileUrl","timestamp","ServerValue","TIMESTAMP","getMessagesRef","getPath","pathToUpload","filePath","uuidv4","Math","round","bytesTransferred","totalBytes","snapshot","downloadUrl","sendFileMessage","cancel","_this$state3","dist_es","onSelect","title","onKeyDown","autoComplete","some","Messages_FileModal","Messages_ProgressBar","isOwnMessage","Message","moment","fromNow","hasOwnProperty","isImage","content","Typing","Skeleton","Messages","privateMessagesRef","messages","messagesLoading","searchTerm","searchResults","typingUsers","listeners","listener","addToListeners","newListener","scrollToBottom","messagesEnd","scrollIntoView","behavior","addMessageListener","addTypingListeners","loadedMessages","countUniqueUsers","countUserPosts","addUserStarsListener","once","data","prevStarred","keys","starChannel","handleSearchMessages","channelMessages","regex","RegExp","match","uniqueUsers","plural","setUserPosts","displayMessages","Messages_Message","displayChannelName","displayTypingUsers","alignItems","marginBottom","Messages_Typing","displayMessageSkeleton","Array","_","Messages_Skeleton","prevProps","Messages_MessagesHeader","Messages_MessageForm","components_SidePanel_SidePanel","components_Messages_Messages","FooterPart","Date","getFullYear","href","fab","Login","email","password","displayErrors","signInWithEmailAndPassword","signedInUser","handleInputError","inputName","toLowerCase","spellCheck","Auth_FooterPart","Register","username","passwordConfirmation","isFormEmpty","isPasswordValid","createUserWithEmailAndPassword","createdUser","md5","saveUser","Spinner","Dimmer","Loader","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","initialUserState","isLoading","initialChannelState","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","Root","onAuthStateChanged","setUser","history","clearUser","src_Spinner","react_router","exact","path","component","App","Profile","RootWithAuth","withRouter","ReactDOM","render","es","document","getElementById","process","origin","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c4b1c86b.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\nimport \"firebase/storage\";\r\n\r\nvar config = {\r\n  apiKey: \"AIzaSyCsOHr1Y2l35wSYt_Zg8vE7inO_9O30p1c\",\r\n    authDomain: \"bearchat-app.firebaseapp.com\",\r\n    databaseURL: \"https://bearchat-app.firebaseio.com\",\r\n    projectId: \"bearchat-app\",\r\n    storageBucket: \"bearchat-app.appspot.com\",\r\n    messagingSenderId: \"465344246644\",\r\n    appId: \"1:465344246644:web:4622decaba1f840b\"\r\n};\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;\r\n","import React from \"react\";\nimport firebase from \"../../firebase\";\nimport AvatarEditor from \"react-avatar-editor\";\n// prettier-ignore\nimport { Grid, Header, Icon, Dropdown, Image, Modal, Input, Button } from \"semantic-ui-react\";\nimport { MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from \"mdbreact\";\n\nclass UserPanel extends React.Component {\n  state = {\n    user: this.props.currentUser,\n    modal: false,\n    previewImage: \"\",\n    croppedImage: \"\",\n    blob: null,\n    uploadedCroppedImage: \"\",\n    storageRef: firebase.storage().ref(),\n    userRef: firebase.auth().currentUser,\n    usersRef: firebase.database().ref(\"users\"),\n    metadata: {\n    contentType: \"image/jpeg\"\n    }\n  };\n\n  openModal = () => this.setState({ modal: true });\n\n  closeModal = () => this.setState({ modal: false });\n\n  uploadCroppedImage = () => {\n    const { storageRef, userRef, blob, metadata } = this.state;\n\n    storageRef\n      .child(`avatars/users/${userRef.uid}`)\n      .put(blob, metadata)\n      .then(snap => {\n        snap.ref.getDownloadURL().then(downloadURL => {\n          this.setState({ uploadedCroppedImage: downloadURL }, () =>\n            this.changeAvatar()\n          );\n        });\n      });\n  };\n\n  changeAvatar = () => {\n    this.state.userRef\n      .updateProfile({\n        photoURL: this.state.uploadedCroppedImage\n      })\n      .then(() => {\n        console.log(\"PhotoURL updated\");\n        this.closeModal();\n      })\n      .catch(err => {\n        console.error(err);\n      });\n\n    this.state.usersRef\n      .child(this.state.user.uid)\n      .update({ avatar: this.state.uploadedCroppedImage })\n      .then(() => {\n        console.log(\"User avatar updated\");\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  };\n\n  handleChange = event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n\n    if (file) {\n      reader.readAsDataURL(file);\n      reader.addEventListener(\"load\", () => {\n        this.setState({ previewImage: reader.result });\n      });\n    }\n  };\n\n  handleCropImage = () => {\n    if (this.avatarEditor) {\n      this.avatarEditor.getImageScaledToCanvas().toBlob(blob => {\n        let imageUrl = URL.createObjectURL(blob);\n        this.setState({\n          croppedImage: imageUrl,\n          blob\n        });\n      });\n    }\n  };\n\n  handleSignout = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(() => console.log(\"signed out!\"));\n  };\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  render() {\n    const { user, modal, previewImage, croppedImage } = this.state;\n\n    return (\n      <div>\n        <div>\n          <h2>BearChat</h2>\n        </div>\n        <MDBDropdown>\n          <MDBDropdownToggle className=\"user-toggle\" caret color=\"dark\">\n              <img className=\"sidebar-avatar\" src={user.photoURL}/>\n              {user.displayName}\n          </MDBDropdownToggle>\n          <MDBDropdownMenu basic className=\"user-toggle\">\n            <MDBDropdownItem disabled>Signed in as <strong>{this.state.user.displayName}</strong></MDBDropdownItem>\n            <MDBDropdownItem onClick={this.openModal}>Change Avatar</MDBDropdownItem>\n            <MDBDropdownItem divider />\n            <MDBDropdownItem onClick={this.handleSignout}>Sign Out</MDBDropdownItem>\n          </MDBDropdownMenu>\n        </MDBDropdown>\n\n          <MDBModal className=\"form-dark avatar-modal\" contentClassName=\"card card-image\" isOpen={this.state.modal} toggle={this.toggle}>\n            <MDBModalHeader toggle={this.toggle}>Upload and crop avatar</MDBModalHeader>\n            <MDBModalBody>\n            <div>\n              <input\n                onChange={this.handleChange}\n                type=\"file\"\n                label=\"New Avatar\"\n                style={{ paddingBottom: \"20px\"}}\n              />\n            </div>\n            <div>\n              {previewImage && (\n                <AvatarEditor\n                  ref={node => (this.avatarEditor = node)}\n                  image={previewImage}\n                  width={100}\n                  height={100}\n                  border={50}\n                  borderRadius={50}\n                  scale={2}\n                  style={{ display:'block', marginLeft: \"auto\", marginRight: \"auto\", borderRadius:'5px' }}\n                />\n              )}\n              </div>\n              <div>\n              {croppedImage && (\n                <img\n                  style={{ display:'block', marginLeft: \"auto\", marginRight: \"auto\", borderRadius:'50px' }}\n                  width={100}\n                  height={100}\n                  src={croppedImage}\n                />\n              )}\n            </div>\n            </MDBModalBody>\n            <div className=\"avatar-modal-footer1\">\n              <MDBBtn outline color=\"danger\" onClick={this.toggle}>Cancel</MDBBtn>\n              <MDBBtn outline onClick={this.handleCropImage}>Preview</MDBBtn>\n            </div>\n            {croppedImage && (\n              <div className=\"avatar-modal-footer2\">\n                <MDBBtn\n                  color=\"success\"\n                  onClick={this.uploadCroppedImage}\n                >\n                  <i className=\"save\" />Change avatar\n                </MDBBtn>\n              </div>\n            )}\n\n            <MDBModalFooter className=\"avatar-modal-footer\">\n              <MDBBtn outline color=\"danger\" onClick={this.toggle}>Cancel</MDBBtn>\n              <MDBBtn outline onClick={this.handleCropImage}>Preview</MDBBtn>\n              {croppedImage && (\n                <MDBBtn\n                  outline\n                  color=\"success\"\n                  onClick={this.uploadCroppedImage}\n                >\n                  <i className=\"save\" />Change Avatar\n                </MDBBtn>\n              )}\n            </MDBModalFooter>\n          </MDBModal>\n      </div>\n    );\n  }\n}\n\nexport default UserPanel;\n","import * as actionTypes from \"./types\";\n\n/* User Actions */\nexport const setUser = user => {\n  return {\n    type: actionTypes.SET_USER,\n    payload: {\n      currentUser: user\n    }\n  };\n};\n\nexport const clearUser = () => {\n  return {\n    type: actionTypes.CLEAR_USER\n  };\n};\n\n/* Channel Actions */\nexport const setCurrentChannel = channel => {\n  return {\n    type: actionTypes.SET_CURRENT_CHANNEL,\n    payload: {\n      currentChannel: channel\n    }\n  };\n};\n\nexport const setPrivateChannel = isPrivateChannel => {\n  return {\n    type: actionTypes.SET_PRIVATE_CHANNEL,\n    payload: {\n      isPrivateChannel\n    }\n  };\n};\n\nexport const setUserPosts = userPosts => {\n  return {\n    type: actionTypes.SET_USER_POSTS,\n    payload: {\n      userPosts\n    }\n  };\n};\n\n/* Colors Actions */\nexport const setColors = (primaryColor, secondaryColor) => {\n  return {\n    type: actionTypes.SET_COLORS,\n    payload: {\n      primaryColor,\n      secondaryColor\n    }\n  };\n};\n","/* User Action Types */\nexport const SET_USER = \"SET_USER\";\nexport const CLEAR_USER = \"CLEAR_USER\";\n\n/* Channel Action Types */\nexport const SET_CURRENT_CHANNEL = \"SET_CURRENT_CHANNEL\";\nexport const SET_PRIVATE_CHANNEL = \"SET_PRIVATE_CHANNEL\";\nexport const SET_USER_POSTS = \"SET_USER_POSTS\";\n\n/* Colors Action Types */\nexport const SET_COLORS = \"SET_COLORS\";\n","import React from \"react\";\nimport firebase from \"../../firebase\";\nimport { connect } from \"react-redux\";\nimport { setCurrentChannel, setPrivateChannel } from \"../../actions\";\nimport { MDBInputGroup,MDBModal, MDBModalHeader, MDBModalBody, MDBModalFooter, MDBInput, MDBDropdown, MDBBtn, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem, MDBContainer, MDBCollapse, MDBCard, MDBCardBody, MDBCollapseHeader } from \"mdbreact\";\n\n\nclass Channels extends React.Component {\n  state = {\n    activeChannel: \"\",\n    user: this.props.currentUser,\n    channel: null,\n    channels: [],\n    channelName: \"\",\n    channelDetails: \"\",\n    channelsRef: firebase.database().ref(\"channels\"),\n    messagesRef: firebase.database().ref(\"messages\"),\n    typingRef: firebase.database().ref(\"typing\"),\n    notifications: [],\n    modal: false,\n    firstLoad: true,\n    collapseID: \"\"\n  };\n\n  componentDidMount() {\n    this.addListeners();\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  addListeners = () => {\n    let loadedChannels = [];\n    this.state.channelsRef.on(\"child_added\", snap => {\n      loadedChannels.push(snap.val());\n      this.setState({ channels: loadedChannels }, () => this.setFirstChannel());\n      this.addNotificationListener(snap.key);\n    });\n  };\n\n  addNotificationListener = channelId => {\n    this.state.messagesRef.child(channelId).on(\"value\", snap => {\n      if (this.state.channel) {\n        this.handleNotifications(\n          channelId,\n          this.state.channel.id,\n          this.state.notifications,\n          snap\n        );\n      }\n    });\n  };\n\n  handleNotifications = (channelId, currentChannelId, notifications, snap) => {\n    let lastTotal = 0;\n\n    let index = notifications.findIndex(\n      notification => notification.id === channelId\n    );\n\n    if (index !== -1) {\n      if (channelId !== currentChannelId) {\n        lastTotal = notifications[index].total;\n\n        if (snap.numChildren() - lastTotal > 0) {\n          notifications[index].count = snap.numChildren() - lastTotal;\n        }\n      }\n      notifications[index].lastKnownTotal = snap.numChildren();\n    } else {\n      notifications.push({\n        id: channelId,\n        total: snap.numChildren(),\n        lastKnownTotal: snap.numChildren(),\n        count: 0\n      });\n    }\n\n    this.setState({ notifications });\n  };\n\n  removeListeners = () => {\n    this.state.channelsRef.off();\n    this.state.channels.forEach(channel => {\n      this.state.messagesRef.child(channel.id).off();\n    });\n  };\n\n  setFirstChannel = () => {\n    const firstChannel = this.state.channels[0];\n    if (this.state.firstLoad && this.state.channels.length > 0) {\n      this.props.setCurrentChannel(firstChannel);\n      this.setActiveChannel(firstChannel);\n      this.setState({ channel: firstChannel });\n    }\n    this.setState({ firstLoad: false });\n  };\n\n  addChannel = () => {\n    const { channelsRef, channelName, channelDetails, user } = this.state;\n\n    const key = channelsRef.push().key;\n\n    const newChannel = {\n      id: key,\n      name: channelName,\n      details: channelDetails,\n      createdBy: {\n        name: user.displayName,\n        avatar: user.photoURL\n      }\n    };\n\n    channelsRef\n      .child(key)\n      .update(newChannel)\n      .then(() => {\n        this.setState({ channelName: \"\", channelDetails: \"\" });\n        this.closeModal();\n        console.log(\"channel added\");\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.isFormValid(this.state)) {\n      this.addChannel();\n    }\n  };\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  changeChannel = channel => {\n    this.setActiveChannel(channel);\n    this.state.typingRef\n      .child(this.state.channel.id)\n      .child(this.state.user.uid)\n      .remove();\n    this.clearNotifications();\n    this.props.setCurrentChannel(channel);\n    this.props.setPrivateChannel(false);\n    this.setState({ channel });\n  };\n\n  clearNotifications = () => {\n    let index = this.state.notifications.findIndex(\n      notification => notification.id === this.state.channel.id\n    );\n\n    if (index !== -1) {\n      let updatedNotifications = [...this.state.notifications];\n      updatedNotifications[index].total = this.state.notifications[\n        index\n      ].lastKnownTotal;\n      updatedNotifications[index].count = 0;\n      this.setState({ notifications: updatedNotifications });\n    }\n  };\n\n  setActiveChannel = channel => {\n    this.setState({ activeChannel: channel.id });\n  };\n\n  getNotificationCount = channel => {\n    let count = 0;\n\n    this.state.notifications.forEach(notification => {\n      if (notification.id === channel.id) {\n        count = notification.count;\n      }\n    });\n\n    if (count > 0) return count;\n  };\n\n  displayChannels = channels =>\n    channels.length > 0 &&\n    channels.map(channel => (\n      <MDBBtn\n        color=\"dark\"\n        key={channel.id}\n        onClick={() => this.changeChannel(channel)}\n        name={channel.name}\n        active={channel.id === this.state.activeChannel}\n        className=\"sidebar-dropdown-item\"\n      >\n        {this.getNotificationCount(channel) && (\n          <p style={{color:'green',background:'black'}}>{this.getNotificationCount(channel)}</p>\n        )}\n        #{channel.name}\n      </MDBBtn>\n    ));\n\n  isFormValid = ({ channelName, channelDetails }) =>\n    channelName && channelDetails;\n\n  openModal = () => this.setState({ modal: true });\n\n  closeModal = () => this.setState({ modal: false });\n\n  toggleCollapse = collapseID => () =>\n  this.setState(prevState => ({\n    collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\n  }));\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  render() {\n    const { channels, modal, collapseID } = this.state;\n\n    return (\n      <React.Fragment>\n        <MDBCard className=\"sidebar-dropdown\">\n          <MDBCollapseHeader className=\"sidebar-category\">            \n            Channels {\" \"} ({channels.length})\n            <MDBBtn\n              className=\"add-channel\"\n              onClick={this.openModal}\n              color=\"dark\"\n            >\n              <i className=\"fas fa-plus fa-2x\" />\n            </MDBBtn>\n            <MDBBtn\n              onClick={this.toggleCollapse(\"collapse2\")}\n              className=\"dropdown-arrow\"\n              color=\"dark\"\n            >\n              <i className={ collapseID===\"collapse2\" ? \"fa fa-angle-down rotate-icon fa-2x\" : \"fa fa-angle-down fa-2x\" } />\n            </MDBBtn>\n          </MDBCollapseHeader>\n          <MDBCollapse id=\"collapse2\" isOpen={collapseID}>\n            <MDBCardBody className=\"sidebar-dropdown-menu\">\n              {this.displayChannels(channels)}\n            </MDBCardBody>\n          </MDBCollapse>\n        </MDBCard>\n\n        <MDBModal className=\"form-dark channel-modal\" isOpen={this.state.modal} toggle={this.toggle}>\n          <MDBModalHeader toggle={this.toggle}>Create a channel</MDBModalHeader>\n          <MDBModalBody>\n            <form onSubmit={this.handleSubmit}>\n              <div>\n                <MDBInput\n                  icon=\"fas fa-book\"\n                  label=\"Name of Channel\"\n                  name=\"channelName\"\n                  onChange={this.handleChange}\n                />\n              </div>\n              <div>\n                <MDBInput\n                  icon=\"fas fa-book-open\"\n                  label=\"About the Channel\"\n                  name=\"channelDetails\"\n                  onChange={this.handleChange}\n                />\n              </div>\n            </form>\n          </MDBModalBody>\n          <MDBModalFooter>\n            <MDBBtn outline color=\"danger\" onClick={this.toggle}>Cancel</MDBBtn>\n            <MDBBtn outline color=\"success\" onClick={this.handleSubmit}>Create</MDBBtn>\n          </MDBModalFooter>\n        </MDBModal>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { setCurrentChannel, setPrivateChannel }\n)(Channels);\n","import React from \"react\";\nimport firebase from \"../../firebase\";\nimport { connect } from \"react-redux\";\nimport { setCurrentChannel, setPrivateChannel } from \"../../actions\";\nimport { MDBIcon,MDBDropdown, MDBBtn, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem, MDBContainer, MDBCollapse, MDBCard, MDBCardBody, MDBCollapseHeader } from \"mdbreact\";\n\nclass DirectMessages extends React.Component {\n  state = {\n    activeChannel: \"\",\n    user: this.props.currentUser,\n    users: [],\n    usersRef: firebase.database().ref(\"users\"),\n    connectedRef: firebase.database().ref(\".info/connected\"),\n    presenceRef: firebase.database().ref(\"presence\"),\n    collapseID: \"\"\n  };\n\n  componentDidMount() {\n    if (this.state.user) {\n      this.addListeners(this.state.user.uid);\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  removeListeners = () => {\n    this.state.usersRef.off();\n    this.state.presenceRef.off();\n    this.state.connectedRef.off();\n  };\n\n  addListeners = currentUserUid => {\n    let loadedUsers = [];\n    this.state.usersRef.on(\"child_added\", snap => {\n      if (currentUserUid !== snap.key) {\n        let user = snap.val();\n        user[\"uid\"] = snap.key;\n        user[\"status\"] = \"offline\";\n        loadedUsers.push(user);\n        this.setState({ users: loadedUsers });\n      }\n    });\n\n    this.state.connectedRef.on(\"value\", snap => {\n      if (snap.val() === true) {\n        const ref = this.state.presenceRef.child(currentUserUid);\n        ref.set(true);\n        ref.onDisconnect().remove(err => {\n          if (err !== null) {\n            console.error(err);\n          }\n        });\n      }\n    });\n\n    this.state.presenceRef.on(\"child_added\", snap => {\n      if (currentUserUid !== snap.key) {\n        this.addStatusToUser(snap.key);\n      }\n    });\n\n    this.state.presenceRef.on(\"child_removed\", snap => {\n      if (currentUserUid !== snap.key) {\n        this.addStatusToUser(snap.key, false);\n      }\n    });\n  };\n\n  addStatusToUser = (userId, connected = true) => {\n    const updatedUsers = this.state.users.reduce((acc, user) => {\n      if (user.uid === userId) {\n        user[\"status\"] = `${connected ? \"online\" : \"offline\"}`;\n      }\n      return acc.concat(user);\n    }, []);\n    this.setState({ users: updatedUsers });\n  };\n\n  isUserOnline = user => user.status === \"online\";\n\n  changeChannel = user => {\n    const channelId = this.getChannelId(user.uid);\n    const channelData = {\n      id: channelId,\n      name: user.name\n    };\n    this.props.setCurrentChannel(channelData);\n    this.props.setPrivateChannel(true);\n    this.setActiveChannel(user.uid);\n  };\n\n  getChannelId = userId => {\n    const currentUserId = this.state.user.uid;\n    return userId < currentUserId\n      ? `${userId}/${currentUserId}`\n      : `${currentUserId}/${userId}`;\n  };\n\n  setActiveChannel = userId => {\n    this.setState({ activeChannel: userId });\n  };\n\n  toggleCollapse = collapseID => () =>\n  this.setState(prevState => ({\n    collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\n  }));\n\n  render() {\n    const { users, activeChannel, collapseID } = this.state;\n\n    return (\n      <MDBCard className=\"sidebar-dropdown\">\n        <MDBCollapseHeader className=\"sidebar-category\">\n          Private message {\" \"} ({users.length})\n          <MDBBtn\n            onClick={this.toggleCollapse(\"collapse3\")}\n            className=\"dropdown-arrow\"\n            color=\"dark\"\n          >\n            <i className={ collapseID===\"collapse3\" ? \"fa fa-angle-down rotate-icon fa-2x\" : \"fa fa-angle-down fa-2x\" } />\n          </MDBBtn>\n        </MDBCollapseHeader>\n        <MDBCollapse id=\"collapse3\" isOpen={collapseID}>\n          <MDBCardBody className=\"sidebar-dropdown-menu\">\n            {users.map(user => (\n          <MDBBtn \n            color=\"dark\"\n            key={user.uid}\n            active={user.uid === activeChannel}\n            onClick={() => this.changeChannel(user)}\n            style={{ opacity: 0.7, fontStyle: \"italic\" }}\n            className=\"sidebar-dropdown-item\"\n          >\n            <MDBIcon \n              icon=\"power-off\"\n              className={this.isUserOnline(user) ? \"user-online\" : \"user-offline\"}\n             />\n            {user.name}\n          </MDBBtn>\n          ))}\n          </MDBCardBody>\n        </MDBCollapse>\n      </MDBCard>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { setCurrentChannel, setPrivateChannel }\n)(DirectMessages);\n","import React from \"react\";\nimport firebase from \"../../firebase\";\nimport { connect } from \"react-redux\";\nimport { setCurrentChannel, setPrivateChannel } from \"../../actions\";\nimport { Menu, Icon } from \"semantic-ui-react\";\nimport { MDBDropdown, MDBBtn, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem, MDBContainer, MDBCollapse, MDBCard, MDBCardBody, MDBCollapseHeader } from \"mdbreact\";\n\n\nclass Starred extends React.Component {\n  state = {\n    user: this.props.currentUser,\n    usersRef: firebase.database().ref(\"users\"),\n    activeChannel: \"\",\n    starredChannels: [],\n    collapseID: \"\"\n  };\n\n  componentDidMount() {\n    if (this.state.user) {\n      this.addListeners(this.state.user.uid);\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeListener();\n  }\n\n  removeListener = () => {\n    this.state.usersRef.child(`${this.state.user.uid}/starred`).off();\n  };\n\n  addListeners = userId => {\n    this.state.usersRef\n      .child(userId)\n      .child(\"starred\")\n      .on(\"child_added\", snap => {\n        const starredChannel = { id: snap.key, ...snap.val() };\n        this.setState({\n          starredChannels: [...this.state.starredChannels, starredChannel]\n        });\n      });\n\n    this.state.usersRef\n      .child(userId)\n      .child(\"starred\")\n      .on(\"child_removed\", snap => {\n        const channelToRemove = { id: snap.key, ...snap.val() };\n        const filteredChannels = this.state.starredChannels.filter(channel => {\n          return channel.id !== channelToRemove.id;\n        });\n        this.setState({ starredChannels: filteredChannels });\n      });\n  };\n\n  setActiveChannel = channel => {\n    this.setState({ activeChannel: channel.id });\n  };\n\n  changeChannel = channel => {\n    this.setActiveChannel(channel);\n    this.props.setCurrentChannel(channel);\n    this.props.setPrivateChannel(false);\n  };\n\n  displayChannels = starredChannels =>\n    starredChannels.length > 0 &&\n    starredChannels.map(channel => (\n      <MDBBtn\n        color=\"dark\"\n        key={channel.id}\n        onClick={() => this.changeChannel(channel)}\n        name={channel.name}\n        active={channel.id === this.state.activeChannel}\n        className=\"sidebar-dropdown-item\"\n      >\n        #{channel.name}\n      </MDBBtn>\n    ));\n\n  toggleCollapse = collapseID => () =>\n  this.setState(prevState => ({\n    collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\n  }));\n\n  render() {\n    const { starredChannels, collapseID } = this.state;\n\n\n    return (\n      <MDBCard className=\"sidebar-dropdown\">\n        <MDBCollapseHeader className=\"sidebar-category\">\n          Favorite Channels {\" \"} ({starredChannels.length})\n          <MDBBtn\n              onClick={this.toggleCollapse(\"collapse1\")}\n              className=\"dropdown-arrow\"\n              color=\"dark\"\n            >\n              <i className={ collapseID===\"collapse1\" ? \"fa fa-angle-down rotate-icon fa-2x\" : \"fa fa-angle-down fa-2x\" } />\n            </MDBBtn>\n        </MDBCollapseHeader>\n        <MDBCollapse id=\"collapse1\" isOpen={collapseID}>\n          <MDBCardBody className=\"sidebar-dropdown-menu\">\n            {this.displayChannels(starredChannels)}\n          </MDBCardBody>\n        </MDBCollapse>\n      </MDBCard>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { setCurrentChannel, setPrivateChannel }\n)(Starred);\n","import React from \"react\";\nimport { Link } from 'react-router-dom';\n//import { Menu } from \"semantic-ui-react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Transition from 'react-transition-group/Transition';\nimport { MDBSideNavCat, MDBSideNavNav, MDBSideNav, MDBSideNavLink, MDBIcon, MDBBtn, MDBContainer, MDBCollapse, MDBCard, MDBCardBody, MDBCollapseHeader } from \"mdbreact\";\n\nimport UserPanel from \"./UserPanel\";\nimport Channels from \"./Channels\";\nimport DirectMessages from \"./DirectMessages\";\nimport Starred from \"./Starred\";\n\nclass SidePanel extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      isOpen: false\n    };\n  }\n\n  state = {\n    show:true,\n    collapseID: \"\"\n  }\n\n  toggleCollapse = collapseID => () =>\n\tthis.setState(prevState => ({\n\t  collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\n\t}));\n\n  toggleSidebar = () => {\n    this.setState({\n      show:!this.state.show ? true:false\n    })\n  }\n\n  render() {\n    const { currentUser } = this.props;\n    const { collapseID } = this.state;\n\n    return (\n      <div>\n        <MDBBtn color=\"dark\" onClick={this.toggleSidebar} className=\"toggle-mobile-navbar\">\n          <MDBIcon icon=\"bars\" size=\"3x\"/>\n        </MDBBtn>\n        <div className=\"mobile-sidebar\">\n          <Transition\n            in={this.state.show}\n            timeout={0}\n          >\n            { state =>\n\n              <div className=\"sidebar-box\">\n                <nav className={`sidebar sidebar-${state}`}>\n                  <UserPanel currentUser={currentUser} />\n\t\t\t\t\t    \t\t<MDBContainer className=\"md-accordion mt-5 sidebar-dropdown\">\n\t\t\t\t\t          <Starred currentUser={currentUser} />\n\t\t\t\t\t          <Channels currentUser={currentUser} />\n\t\t\t\t\t          <DirectMessages currentUser={currentUser} />\n\t\t\t\t\t        </MDBContainer>\n                </nav>\n                <div\n                  className={`screenHide screenHide-${state}`}\n                  onClick={this.toggleSidebar}\n                >\n\n                </div>\n              </div>\n            }\n          </Transition>\n        </div>\n        <div className=\"desk-sidebar\" /*style={{width:'250px', background:'blue',zIndex:'43',position:'fixed', height:'100%'}}*/>\n      \t\t<UserPanel currentUser={currentUser} />\n      \t\t<MDBContainer className=\"md-accordion mt-5 sidebar-dropdown\">\n\t          <Starred currentUser={currentUser} />\n\t          <Channels currentUser={currentUser} />\n\t          <DirectMessages currentUser={currentUser} />\n\t        </MDBContainer>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\nexport default SidePanel;","import React from \"react\";\nimport {\n  MDBContainer, \n  MDBCollapse, \n  MDBCard, \n  MDBCardBody, \n  MDBCollapseHeader, \n  MDBIcon,\n  MDBListGroup, \n  MDBListGroupItem\n\n} from \"mdbreact\";\n\nclass MetaPanel extends React.Component {\n  state = {\n    channel: this.props.currentChannel,\n    privateChannel: this.props.isPrivateChannel,\n    activeIndex: 0,\n    collapseID: \"collapse1\"\n  };\n\n  setActiveIndex = (event, titleProps) => {\n    const { index } = titleProps;\n    const { activeIndex } = this.state;\n    const newIndex = activeIndex === index ? -1 : index;\n    this.setState({ activeIndex: newIndex });\n  };\n\n  formatCount = num => (num > 1 || num === 0 ? `${num} posts` : `${num} post`);\n\n  displayTopPosters = posts =>\n    Object.entries(posts)\n      .sort((a, b) => b[1] - a[1])\n      .map(([key, val], i) => (\n        <div style={{background:'none'}} key={i}>\n          <img className=\"message-avatar\" src={val.avatar} />\n          <a className=\"message-author\">{key}</a>\n          <div className=\"message-time\">{this.formatCount(val.count)}</div>\n        </div>\n      ))\n      .slice(0, 2);\n\n  toggleCollapse = collapseID => () =>\n  this.setState(prevState => ({\n    collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\n  }));\n\n  render() {\n    const { activeIndex, privateChannel, channel } = this.state;\n    const { userPosts } = this.props;\n\n    if (privateChannel) return null;\n\n    return (\n      <div>\n          <MDBCard\n            style={{ backgroundColor: \"rgba(0,0,0,.03)\" }}\n            className=\"my-1\"\n          >\n            <MDBCollapseHeader onClick={this.toggleCollapse(\"collapse1\")}>\n              <span className=\"white-text\">Channel Details</span>\n              <MDBIcon\n                icon={\n                  this.state.collapseID === \"collapse1\"\n                    ? \"angle-up\"\n                    : \"angle-down\"\n                }\n                className=\"white-text\"\n                style={{ float: \"right\" }}\n              />\n            </MDBCollapseHeader>\n            <MDBCollapse id=\"collapse1\" isOpen={this.state.collapseID}>\n              <MDBCardBody className=\"rgba-grey-light white-text\">\n                {channel && channel.details}\n              </MDBCardBody>\n            </MDBCollapse>\n          </MDBCard>\n\n          <MDBCard style={{ backgroundColor: \"rgba(0,0,0,.03)\" }}>\n            <MDBCollapseHeader onClick={this.toggleCollapse(\"collapse2\")}>\n              <span className=\"white-text\">Top Posters</span>\n              <MDBIcon\n                icon={\n                  this.state.collapseID === \"collapse2\"\n                    ? \"angle-up\"\n                    : \"angle-down\"\n                }\n                className=\"white-text\"\n                style={{ float: \"right\" }}\n              />\n            </MDBCollapseHeader>\n            <MDBCollapse id=\"collapse2\" isOpen={this.state.collapseID}>\n              <MDBCardBody className=\"rgba-grey-light white-text\">\n                <MDBListGroup>{userPosts && this.displayTopPosters(userPosts)}</MDBListGroup>\n              </MDBCardBody>\n            </MDBCollapse>\n          </MDBCard>\n\n          <MDBCard style={{ backgroundColor: \"rgba(0,0,0,.03)\" }}>\n            <MDBCollapseHeader onClick={this.toggleCollapse(\"collapse3\")}>\n              <span className=\"white-text\">Created By</span>\n              <MDBIcon\n                icon={\n                  this.state.collapseID === \"collapse3\"\n                    ? \"angle-up\"\n                    : \"angle-down\"\n                }\n                className=\"white-text\"\n                style={{ float: \"right\" }}\n              />\n            </MDBCollapseHeader>\n            <MDBCollapse id=\"collapse3\" isOpen={this.state.collapseID}>\n              <MDBCardBody className=\"rgba-grey-light white-text\">\n                  <img className=\"message-avatar\" src={channel && channel.createdBy.avatar} />\n                  <a className=\"message-author\">{channel && channel.createdBy.name}</a>\n              </MDBCardBody>\n            </MDBCollapse>\n          </MDBCard>\n      </div>\n    );\n  }\n}\n\nexport default MetaPanel;\n","import React from \"react\";\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport {\n  MDBNav,\n  MDBNavbar, \n  MDBNavbarBrand, \n  MDBNavbarNav, \n  MDBNavItem, \n  MDBNavLink, \n  MDBNavbarToggler, \n  MDBCollapse, \n  MDBFormInline,\n  MDBDropdown, \n  MDBDropdownToggle, \n  MDBDropdownMenu, \n  MDBDropdownItem, \n  MDBBtn, \n  MDBIcon, \n  MDBModal, \n  MDBModalBody, \n  MDBModalHeader, \n  MDBModalFooter, \n  MDBInput, \n  MDBCol\n} from \"mdbreact\";\n\nimport MetaPanel from \"../MetaPanel/MetaPanel\";\n\nclass MessagesHeader extends React.Component {\n  state = {\n    isOpen: false,\n    modal: false\n  };\n\n  toggleCollapse = () => {\n    this.setState({ isOpen: !this.state.isOpen });\n  }\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  render() {\n    const {\n      channelName,\n      numUniqueUsers,\n      handleSearchChange,\n      searchLoading,\n      isPrivateChannel,\n      handleStar,\n      isChannelStarred,\n\n      currentUser, \n      currentChannel, \n      userPosts\n    } = this.props;\n\n    return (\n      <div>\n      <Router>\n        <MDBNavbar className=\"lobby-navbar\" color=\"black\" dark expand=\"md\">\n          <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\n            <MDBNavbarNav left>\n              <MDBNavItem>\n                <MDBNavbarBrand>\n                  <strong className=\"white-text\">\n                    {channelName}\n                    {!isPrivateChannel && (\n                      <i \n                        onClick={handleStar} \n                        className={isChannelStarred ? \"fas fa-star\" : \"far fa-star\"}\n                        size=\"lg\"\n                      />\n                    )}\n                  </strong>\n                </MDBNavbarBrand>\n                <MDBNavbarBrand>\n                  <small className=\"white-text\">\n                    {numUniqueUsers}\n                  </small>\n                </MDBNavbarBrand>\n              </MDBNavItem>\n              <MDBNavItem>\n                <MDBNavLink onClick={this.toggle} className=\"waves-effect waves-light d-flex align-items-center\" to=\"#!\">\n                  <MDBIcon icon=\"info\" />\n                </MDBNavLink>\n              </MDBNavItem>\n            </MDBNavbarNav>\n            <MDBNavbarNav right>\n              <MDBNavItem>\n                <MDBFormInline waves>\n                  <div className=\"md-form my-0\">\n                    <input\n                      loading={searchLoading}\n                      onChange={handleSearchChange} \n                      className=\"form-control mr-sm-2\" \n                      type=\"text\"\n                      name=\"searchTerm\"\n                      placeholder=\"Search Messages\" \n                      aria-label=\"Search\"\n                    />\n                  </div>\n                </MDBFormInline>\n              </MDBNavItem>\n            </MDBNavbarNav>\n          </MDBCollapse>\n        </MDBNavbar>\n\n        <MDBNav className=\"mobile-lobby-navbar\" color=\"black\">\n          <MDBNavItem>\n                <h5 className=\"white-text\">\n                  {channelName}\n                  {!isPrivateChannel && (\n                    <i \n                      onClick={handleStar} \n                      className={isChannelStarred ? \"fas fa-star\" : \"far fa-star\"}\n                      size=\"lg\"\n                    />\n                  )}\n                </h5>\n            </MDBNavItem>\n          <MDBNavItem>\n            <MDBDropdown>\n              <MDBDropdownToggle nav caret>\n                <span className=\"mr-2\"></span>\n              </MDBDropdownToggle>\n              <MDBDropdownMenu>\n                <MDBDropdownItem>{numUniqueUsers}</MDBDropdownItem>\n                <MDBDropdownItem onClick={this.toggle} className=\"waves-effect waves-light d-flex align-items-center\" to=\"#!\">\n                    <p>Information</p>\n                </MDBDropdownItem>\n              </MDBDropdownMenu>\n            </MDBDropdown>\n          </MDBNavItem>\n          <MDBNavItem>\n              <MDBFormInline waves style={{float:'right'}}>\n                <div className=\"md-form my-0\">\n                  <input\n                    loading={searchLoading}\n                    onChange={handleSearchChange} \n                    className=\"form-control mr-sm-2\" \n                    type=\"text\"\n                    name=\"searchTerm\"\n                    placeholder=\"Search Messages\" \n                    aria-label=\"Search\"\n                  />\n                </div>\n              </MDBFormInline>\n            </MDBNavItem>\n        </MDBNav>\n      </Router>\n      \n        <MDBModal className=\"form-dark\" isOpen={this.state.modal} toggle={this.toggle}>\n          <MDBModalHeader toggle={this.toggle}>About {channelName}</MDBModalHeader>\n          <MDBModalBody>\n            <MetaPanel\n              key={currentChannel && currentChannel.name}\n              userPosts={userPosts}\n              currentChannel={currentChannel}\n              isPrivateChannel={isPrivateChannel}\n            />\n          </MDBModalBody>\n        </MDBModal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  currentUser: state.user.currentUser,\n  currentChannel: state.channel.currentChannel,\n  isPrivateChannel: state.channel.isPrivateChannel,\n  userPosts: state.channel.userPosts\n});\n\nexport default connect(mapStateToProps)(MessagesHeader);\n\n\n //<Segment clearing>\n        {/* Channel Title */}\n        {/*<Header fluid=\"true\" as=\"h2\" floated=\"left\" style={{ marginBottom: 0 }}>\n          <span>\n            {channelName}\n            {!isPrivateChannel && (\n              <Icon\n                onClick={handleStar}\n                name={isChannelStarred ? \"star\" : \"star outline\"}\n                color={isChannelStarred ? \"yellow\" : \"black\"}\n              />\n            )}\n          </span>\n          <Header.Subheader>{numUniqueUsers}</Header.Subheader>\n        </Header>*/}\n\n        {/* Channel Search Input */}\n        {/*<Header floated=\"right\">\n          <Input\n            loading={searchLoading}\n            onChange={handleSearchChange}\n            size=\"mini\"\n            icon=\"search\"\n            name=\"searchTerm\"\n            placeholder=\"Search Messages\"\n          />\n        </Header>\n      </Segment>*/}","import React from \"react\";\r\nimport mime from \"mime-types\";\r\nimport { Modal, Input, Button, Icon } from \"semantic-ui-react\";\r\nimport { MDBContainer, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter,MDBFileInput } from 'mdbreact';\r\n\r\nclass FileModal extends React.Component {\r\n  state = {\r\n    file: null,\r\n    authorized: [\r\n    \"image/jpeg\", \r\n    \"image/png\", \r\n    \"image/gif\", \r\n    \"image/webp\"],\r\n    modal: false\r\n  };\r\n\r\n  addFile = event => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      this.setState({ file });\r\n    }\r\n  };\r\n\r\n  sendFile = () => {\r\n    const { file } = this.state;\r\n    const { uploadFile, closeModal } = this.props;\r\n\r\n    if (file !== null) {\r\n      if (this.isAuthorized(file.name)) {\r\n        const metadata = { contentType: mime.lookup(file.name) };\r\n        uploadFile(file, metadata);\r\n        closeModal();\r\n        this.clearFile();\r\n      }\r\n    }\r\n  };\r\n\r\n  isAuthorized = filename =>\r\n    this.state.authorized.includes(mime.lookup(filename));\r\n\r\n  clearFile = () => this.setState({ file: null });\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { modal, closeModal } = this.props;\r\n\r\n    return (\r\n      <span>\r\n        <MDBBtn\r\n          color=\"black\"\r\n          onClick={this.toggle}\r\n          icon=\"cloud upload\"\r\n          className=\"message-button\"\r\n        >\r\n          Upload\r\n        </MDBBtn>\r\n        <MDBModal className=\"form-dark\" contentClassName=\"card card-image\" isOpen={this.state.modal} toggle={this.toggle}>\r\n          <MDBModalHeader toggle={this.toggle}>Upload Image or gif</MDBModalHeader>\r\n          <MDBModalBody>\r\n            <input\r\n              onChange={this.addFile}\r\n              label=\"File types: jpg, png, gif\"\r\n              name=\"file\"\r\n              type=\"file\"\r\n            />\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn outline color=\"danger\" onClick={this.toggle}>Cancel</MDBBtn>\r\n            <MDBBtn outline color=\"success\" onClick={this.sendFile}>Send</MDBBtn>\r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FileModal;\r\n","import React from \"react\";\n//import { Progress } from \"semantic-ui-react\";\nimport { MDBProgress } from 'mdbreact';\n\nconst ProgressBar = ({ uploadState, percentUploaded }) =>\n  uploadState === \"uploading\" && (\n    <MDBProgress \n      material\n      animated\n      percent={percentUploaded}\n    />\n    /*<Progress\n      className=\"progress__bar\"\n      percent={percentUploaded}\n      progress\n      indicating\n      size=\"medium\"\n      inverted\n    />*/\n  );\n\nexport default ProgressBar;\n","import React from \"react\";\nimport uuidv4 from \"uuid/v4\";\nimport firebase from \"../../firebase\";\nimport { MDBContainer, MDBBtnGroup, MDBBtn, MDBInput, MDBFileupload, MDBIcon,MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from \"mdbreact\";\nimport { Picker, emojiIndex } from \"emoji-mart\";\nimport \"emoji-mart/css/emoji-mart.css\";\n\nimport FileModal from \"./FileModal\";\nimport ProgressBar from \"./ProgressBar\";\n\nclass MessageForm extends React.Component {\n  state = {\n    storageRef: firebase.storage().ref(),\n    typingRef: firebase.database().ref(\"typing\"),\n    uploadTask: null,\n    uploadState: \"\",\n    percentUploaded: 0,\n    message: \"\",\n    channel: this.props.currentChannel,\n    user: this.props.currentUser,\n    loading: false,\n    errors: [],\n    modal: false,\n    emojiPicker: false\n  };\n\n  componentWillUnmount() {\n    if (this.state.uploadTask !== null) {\n      this.state.uploadTask.cancel();\n      this.setState({ uploadTask: null });\n    }\n  }\n\n  openModal = () => this.setState({ modal: true });\n\n  closeModal = () => this.setState({ modal: false });\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleKeyDown = event => {\n    if (/*event.ctrlKey && */event.keyCode === 13) {\n      this.sendMessage();\n    }\n\n    const { message, typingRef, channel, user } = this.state;\n\n    if (message) {\n      typingRef\n        .child(channel.id)\n        .child(user.uid)\n        .set(user.displayName);\n    } else {\n      typingRef\n        .child(channel.id)\n        .child(user.uid)\n        .remove();\n    }\n  };\n\n  handleTogglePicker = () => {\n    this.setState({ emojiPicker: !this.state.emojiPicker });\n  };\n\n  handleAddEmoji = emoji => {\n    const oldMessage = this.state.message;\n    const newMessage = this.colonToUnicode(` ${oldMessage} ${emoji.colons} `);\n    this.setState({ message: newMessage, emojiPicker: false });\n    setTimeout(() => this.messageInputRef.focus(), 0);\n  }\n\n\n\n  colonToUnicode = message => {\n    return message.replace(/:[A-Za-z0-9_+-]+:/g, x => {\n      x = x.replace(/:/g, \"\");\n      let emoji = emojiIndex.emojis[x];\n      if (typeof emoji !== \"undefined\") {\n        let unicode = emoji.native;\n        if (typeof unicode !== \"undefined\") {\n          return unicode;\n        }\n      }\n      x = \":\" + x + \":\";\n      return x;\n    });\n  };\n\n  createMessage = (fileUrl = null) => {\n    const message = {\n      timestamp: firebase.database.ServerValue.TIMESTAMP,\n      user: {\n        id: this.state.user.uid,\n        name: this.state.user.displayName,\n        avatar: this.state.user.photoURL\n      }\n    };\n    if (fileUrl !== null) {\n      message[\"image\"] = fileUrl;\n    } else {\n      message[\"content\"] = this.state.message;\n    }\n    return message;\n  };\n\n  sendMessage = () => {\n    const { getMessagesRef } = this.props;\n    const { message, channel, user, typingRef } = this.state;\n\n    if (message) {\n      this.setState({ loading: true });\n      getMessagesRef()\n        .child(channel.id)\n        .push()\n        .set(this.createMessage())\n        .then(() => {\n          this.setState({ loading: false, message: \"\", errors: [] });\n          typingRef\n            .child(channel.id)\n            .child(user.uid)\n            .remove();\n        })\n        .catch(err => {\n          console.error(err);\n          this.setState({\n            loading: false,\n            errors: this.state.errors.concat(err)\n          });\n        });\n    } else {\n      this.setState({\n        errors: this.state.errors.concat({ message: \"Add a message\" })\n      });\n    }\n  };\n\n  getPath = () => {\n    if (this.props.isPrivateChannel) {\n      return `chat/private/${this.state.channel.id}`;\n    } else {\n      return \"chat/public\";\n    }\n  };\n\n  uploadFile = (file, metadata) => {\n    const pathToUpload = this.state.channel.id;\n    const ref = this.props.getMessagesRef();\n    const filePath = `${this.getPath()}/${uuidv4()}.jpg`;\n\n    this.setState(\n      {\n        uploadState: \"uploading\",\n        uploadTask: this.state.storageRef.child(filePath).put(file, metadata)\n      },\n      () => {\n        this.state.uploadTask.on(\n          \"state_changed\",\n          snap => {\n            const percentUploaded = Math.round(\n              (snap.bytesTransferred / snap.totalBytes) * 100\n            );\n            this.setState({ percentUploaded });\n          },\n          err => {\n            console.error(err);\n            this.setState({\n              errors: this.state.errors.concat(err),\n              uploadState: \"error\",\n              uploadTask: null\n            });\n          },\n          () => {\n            this.state.uploadTask.snapshot.ref\n              .getDownloadURL()\n              .then(downloadUrl => {\n                this.sendFileMessage(downloadUrl, ref, pathToUpload);\n              })\n              .catch(err => {\n                console.error(err);\n                this.setState({\n                  errors: this.state.errors.concat(err),\n                  uploadState: \"error\",\n                  uploadTask: null\n                });\n              });\n          }\n        );\n      }\n    );\n  };\n\n  sendFileMessage = (fileUrl, ref, pathToUpload) => {\n    ref\n      .child(pathToUpload)\n      .push()\n      .set(this.createMessage(fileUrl))\n      .then(() => {\n        this.setState({ uploadState: \"done\" });\n      })\n      .catch(err => {\n        console.error(err);\n        this.setState({\n          errors: this.state.errors.concat(err)\n        });\n      });\n  };\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  render() {\n    const { errors, message, loading, modal, uploadState, percentUploaded, emojiPicker } = this.state;\n\n    return (\n      <div className=\"message-form\">\n        {emojiPicker && (\n          <Picker\n            set=\"apple\"\n            onSelect={this.handleAddEmoji}\n            className=\"emojipicker\"\n            title=\"Pick your emoji\"\n            emoji=\"point_up\"\n          />\n        )}\n\n        <MDBBtn\n        \tcolor=\"dark\"\n        \tid=\"emoji-btn\"\n          onClick={this.handleTogglePicker}\n        >\n          {emojiPicker ? \n  \t        <i className=\"emoji-close fas fa-times fa-3x\"/> \n  \t        : \n  \t        <i className=\"emoji-open fas fa-laugh fa-3x\"/>\n          }\n        </MDBBtn>\n        <div style={{marginLeft:'60px'}}>\n        \n        <input\n          type=\"text\"\n          name=\"message\"\n          onChange={this.handleChange}\n          onKeyDown={this.handleKeyDown}\n          value={message}\n          ref={node => (this.messageInputRef = node)}\n          autoComplete=\"off\"\n          placeholder=\"Write your message\"\n          className={\n            errors.some(error => error.message.includes(\"message\"))\n              ? \"error\"\n              : \"\"\n          }\n        />\n        </div>\n\n          <MDBBtn\n            color=\"black\"\n            onClick={this.sendMessage}\n            disabled={loading}\n            icon=\"edit\"\n            className=\"message-button\"\n          >\n            Send\n          </MDBBtn>\n        \t<FileModal\n\t          modal={modal}\n\t          closeModal={this.closeModal}\n\t          uploadFile={this.uploadFile}\n\t        />\n        <ProgressBar\n          uploadState={uploadState}\n          percentUploaded={percentUploaded}\n        />\n      </div>\n    );\n  }\n}\n\nexport default MessageForm;","import React from \"react\";\nimport moment from \"moment\";\nimport { MDBRow, MDBCol } from \"mdbreact\"\n\nconst isOwnMessage = (message, user) => {\n  return message.user.id === user.uid ? \"message-content\" : \"\";\n};\n\nconst isImage = message => {\n  return message.hasOwnProperty(\"image\") && !message.hasOwnProperty(\"message-content\");\n};\n\nconst timeFromNow = timestamp => moment(timestamp).fromNow();\n\nconst Message = ({ message, user }) => (\n  <div className=\"message\">\n    <hr/>\n      <img className=\"message-avatar\" src={message.user.avatar} />\n      <a className=\"message-author\">{message.user.name}</a>\n      <div className=\"message-time\">{timeFromNow(message.timestamp)}</div>\n      <div className={isOwnMessage(message, user)}>\n        {isImage(message) ? (\n          <img src={message.image} className=\"message-image\" />\n        ) : (\n          <div className=\"message-text\">{message.content}</div>\n        )}\n      </div>\n  </div>\n);\n\nexport default Message;","import React from 'react';\n\nconst Typing = () => (\n  <div className=\"typing\">\n    <div className=\"typing__dot\"></div>\n    <div className=\"typing__dot\"></div>\n    <div className=\"typing__dot\"></div>\n  </div>\n)\n\nexport default Typing;","import React from \"react\";\n\nconst Skeleton = () => (\n  <div className=\"skeleton\">\n    <div className=\"skeleton__avatar\" />\n    <div className=\"skeleton__author\" />\n    <div className=\"skeleton__details\" />\n  </div>\n);\n\nexport default Skeleton;\n","import React from \"react\";\nimport { Segment, Comment } from \"semantic-ui-react\";\nimport { MDBRow, MDBCol } from \"mdbreact\";\nimport { connect } from \"react-redux\";\nimport { setUserPosts } from \"../../actions\";\nimport firebase from \"../../firebase\";\n\nimport { render } from 'react-dom';\nimport { Link, DirectLink, Element, Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll'\n\nimport MessagesHeader from \"./MessagesHeader\";\nimport MessageForm from \"./MessageForm\";\nimport Message from \"./Message\";\nimport Typing from \"./Typing\";\nimport Skeleton from \"./Skeleton\";\n\nclass Messages extends React.Component {\n  state = {\n    privateChannel: this.props.isPrivateChannel,\n    privateMessagesRef: firebase.database().ref(\"privateMessages\"),\n    messagesRef: firebase.database().ref(\"messages\"),\n    messages: [],\n    messagesLoading: true,\n    channel: this.props.currentChannel,\n    isChannelStarred: false,\n    user: this.props.currentUser,\n    usersRef: firebase.database().ref(\"users\"),\n    numUniqueUsers: \"\",\n    searchTerm: \"\",\n    searchLoading: false,\n    searchResults: [],\n    typingRef: firebase.database().ref(\"typing\"),\n    typingUsers: [],\n    connectedRef: firebase.database().ref(\".info/connected\"),\n    listeners: []\n  };\n\n  componentDidMount() {\n    const { channel, user, listeners } = this.state;\n\n    if (channel && user) {\n      this.removeListeners(listeners);\n      this.addListeners(channel.id);\n      this.addUserStarsListener(channel.id, user.uid);\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeListeners(this.state.listeners);\n    this.state.connectedRef.off();\n  }\n\n  removeListeners = listeners => {\n    listeners.forEach(listener => {\n      listener.ref.child(listener.id).off(listener.event);\n    });\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.messagesEnd) {\n      this.scrollToBottom();\n    }\n  }\n\n  addToListeners = (id, ref, event) => {\n    const index = this.state.listeners.findIndex(listener => {\n      return (\n        listener.id === id && listener.ref === ref && listener.event === event\n      );\n    });\n\n    if (index === -1) {\n      const newListener = { id, ref, event };\n      this.setState({ listeners: this.state.listeners.concat(newListener) });\n    }\n  };\n\n  scrollToBottom = () => {\n    this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  addListeners = channelId => {\n    this.addMessageListener(channelId);\n    this.addTypingListeners(channelId);\n  };\n\n  addTypingListeners = channelId => {\n    let typingUsers = [];\n    this.state.typingRef.child(channelId).on(\"child_added\", snap => {\n      if (snap.key !== this.state.user.uid) {\n        typingUsers = typingUsers.concat({\n          id: snap.key,\n          name: snap.val()\n        });\n        this.setState({ typingUsers });\n      }\n    });\n    this.addToListeners(channelId, this.state.typingRef, \"child_added\");\n\n    this.state.typingRef.child(channelId).on(\"child_removed\", snap => {\n      const index = typingUsers.findIndex(user => user.id === snap.key);\n      if (index !== -1) {\n        typingUsers = typingUsers.filter(user => user.id !== snap.key);\n        this.setState({ typingUsers });\n      }\n    });\n    this.addToListeners(channelId, this.state.typingRef, \"child_removed\");\n\n    this.state.connectedRef.on(\"value\", snap => {\n      if (snap.val() === true) {\n        this.state.typingRef\n          .child(channelId)\n          .child(this.state.user.uid)\n          .onDisconnect()\n          .remove(err => {\n            if (err !== null) {\n              console.error(err);\n            }\n          });\n      }\n    });\n  };\n\n  addMessageListener = channelId => {\n    let loadedMessages = [];\n    const ref = this.getMessagesRef();\n    ref.child(channelId).on(\"child_added\", snap => {\n      loadedMessages.push(snap.val());\n      this.setState({\n        messages: loadedMessages,\n        messagesLoading: false\n      });\n      this.countUniqueUsers(loadedMessages);\n      this.countUserPosts(loadedMessages);\n    });\n    this.addToListeners(channelId, ref, \"child_added\");\n  };\n\n  addUserStarsListener = (channelId, userId) => {\n    this.state.usersRef\n      .child(userId)\n      .child(\"starred\")\n      .once(\"value\")\n      .then(data => {\n        if (data.val() !== null) {\n          const channelIds = Object.keys(data.val());\n          const prevStarred = channelIds.includes(channelId);\n          this.setState({ isChannelStarred: prevStarred });\n        }\n      });\n  };\n\n  getMessagesRef = () => {\n    const { messagesRef, privateMessagesRef, privateChannel } = this.state;\n    return privateChannel ? privateMessagesRef : messagesRef;\n  };\n\n  handleStar = () => {\n    this.setState(\n      prevState => ({\n        isChannelStarred: !prevState.isChannelStarred\n      }),\n      () => this.starChannel()\n    );\n  };\n\n  starChannel = () => {\n    if (this.state.isChannelStarred) {\n      this.state.usersRef.child(`${this.state.user.uid}/starred`).update({\n        [this.state.channel.id]: {\n          name: this.state.channel.name,\n          details: this.state.channel.details,\n          createdBy: {\n            name: this.state.channel.createdBy.name,\n            avatar: this.state.channel.createdBy.avatar\n          }\n        }\n      });\n    } else {\n      this.state.usersRef\n        .child(`${this.state.user.uid}/starred`)\n        .child(this.state.channel.id)\n        .remove(err => {\n          if (err !== null) {\n            console.error(err);\n          }\n        });\n    }\n  };\n\n  handleSearchChange = event => {\n    this.setState(\n      {\n        searchTerm: event.target.value,\n        searchLoading: true\n      },\n      () => this.handleSearchMessages()\n    );\n  };\n\n  handleSearchMessages = () => {\n    const channelMessages = [...this.state.messages];\n    const regex = new RegExp(this.state.searchTerm, \"gi\");\n    const searchResults = channelMessages.reduce((acc, message) => {\n      if (\n        (message.content && message.content.match(regex)) ||\n        message.user.name.match(regex)\n      ) {\n        acc.push(message);\n      }\n      return acc;\n    }, []);\n    this.setState({ searchResults });\n    setTimeout(() => this.setState({ searchLoading: false }), 1000);\n  };\n\n  countUniqueUsers = messages => {\n    const uniqueUsers = messages.reduce((acc, message) => {\n      if (!acc.includes(message.user.name)) {\n        acc.push(message.user.name);\n      }\n      return acc;\n    }, []);\n    const plural = uniqueUsers.length > 1 || uniqueUsers.length === 0;\n    const numUniqueUsers = `${uniqueUsers.length} user${plural ? \"s\" : \"\"}`;\n    this.setState({ numUniqueUsers });\n  };\n\n  countUserPosts = messages => {\n    let userPosts = messages.reduce((acc, message) => {\n      if (message.user.name in acc) {\n        acc[message.user.name].count += 1;\n      } else {\n        acc[message.user.name] = {\n          avatar: message.user.avatar,\n          count: 1\n        };\n      }\n      return acc;\n    }, {});\n    this.props.setUserPosts(userPosts);\n  };\n\n  displayMessages = messages =>\n    messages.length > 0 &&\n    messages.map(message => (\n      <Message\n        key={message.timestamp}\n        message={message}\n        user={this.state.user}\n      />\n    ));\n\n  displayChannelName = channel => {\n    return channel\n      ? `${this.state.privateChannel ? \"@\" : \"#\"}${channel.name}`\n      : \"\";\n  };\n\n  displayTypingUsers = users =>\n    users.length > 0 &&\n    users.map(user => (\n      <div\n        style={{ display: \"flex\", alignItems: \"center\", marginBottom: \"0.2em\" }}\n        key={user.id}\n      >\n        <span className=\"user__typing\">{user.name} is typing</span> <Typing />\n      </div>\n    ));\n\n  displayMessageSkeleton = loading =>\n    loading ? (\n      <React.Fragment>\n        {[...Array(10)].map((_, i) => (\n          <Skeleton key={i} />\n        ))}\n      </React.Fragment>\n    ) : null;\n\n\n  render() {\n    const { messagesRef, messages, channel, user, numUniqueUsers, searchTerm, searchResults, searchLoading, privateChannel, isChannelStarred, typingUsers, messagesLoading } = this.state;\n\n    return (\n      <React.Fragment>\n        <MessagesHeader\n          channelName={this.displayChannelName(channel)}\n          numUniqueUsers={numUniqueUsers}\n          handleSearchChange={this.handleSearchChange}\n          //searchLoading={searchLoading}\n          isPrivateChannel={privateChannel}\n          handleStar={this.handleStar}\n          isChannelStarred={isChannelStarred}\n        />\n        <div className=\"chat-modal\">\n          <div className=\"messages\">\n            {this.displayMessageSkeleton(messagesLoading)}\n            {searchTerm\n              ? this.displayMessages(searchResults)\n              : this.displayMessages(messages)}\n            {this.displayTypingUsers(typingUsers)}\n            <div ref={node => (this.messagesEnd = node)} />\n          </div>\n        </div>\n\n\n        <MessageForm\n          className=\"message-form\"\n          messagesRef={messagesRef}\n          currentChannel={channel}\n          currentUser={user}\n          isPrivateChannel={privateChannel}\n          getMessagesRef={this.getMessagesRef}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { setUserPosts }\n)(Messages);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { MDBRow, MDBCol } from \"mdbreact\";\n\nimport SidePanel from \"./SidePanel/SidePanel\";\nimport Messages from \"./Messages/Messages\";\nimport MetaPanel from \"./MetaPanel/MetaPanel\";\n\n\nconst App = ({ currentUser, currentChannel, isPrivateChannel, userPosts }) => (\n  <div className=\"lobby-background\">\n      <SidePanel\n        key={currentUser && currentUser.uid}\n        currentUser={currentUser}\n      />\n    \n      <Messages\n        key={currentChannel && currentChannel.id}\n        currentChannel={currentChannel}\n        currentUser={currentUser}\n        isPrivateChannel={isPrivateChannel}\n      />\n  </div>\n);\n\nconst mapStateToProps = state => ({\n  currentUser: state.user.currentUser,\n  currentChannel: state.channel.currentChannel,\n  isPrivateChannel: state.channel.isPrivateChannel,\n  userPosts: state.channel.userPosts\n});\n\nexport default connect(mapStateToProps)(App);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { MDBRow, MDBCol } from \"mdbreact\";\r\n\r\n\r\n\r\nconst Profile = ({ currentUser, currentChannel, isPrivateChannel, userPosts }) => (\r\n  <div className=\"profile-page\">\r\n      {/*<SidePanel\r\n        key={currentUser && currentUser.uid}\r\n        currentUser={currentUser}\r\n      />\r\n    \r\n      <Messages\r\n        key={currentChannel && currentChannel.id}\r\n        currentChannel={currentChannel}\r\n        currentUser={currentUser}\r\n        isPrivateChannel={isPrivateChannel}\r\n      />*/}\r\n\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  currentUser: state.user.currentUser,\r\n  currentChannel: state.channel.currentChannel,\r\n  isPrivateChannel: state.channel.isPrivateChannel,\r\n  userPosts: state.channel.userPosts\r\n});\r\n\r\nexport default connect(mapStateToProps)(Profile);","import React, {Component} from 'react';\r\nimport { Footer, MDBIcon} from 'mdbreact';\r\n//import logo from '../assets/images/logo.svg'\r\n\r\nclass FooterPart extends Component {\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<Footer color=\"elegant-color-dark\" className=\"font-small footer\">\r\n\t\t\t\t<div className=\"footer-copyright text-center\">\r\n\t\t\t\t\t<ul className=\"list-unstyled list-inline\">\r\n\t\t\t\t\t\t<li className=\"list-inline-item\">\r\n\t\t\t\t\t\t\t&copy; {(new Date().getFullYear())} Copyright:\r\n\t\t\t\t\t\t\t<a href=\"http://www.ketchupkungen.se\"> ketchupkungen.se\r\n\t\t\t\t\t\t\t\t{/*<img className=\"footer-img\" src={logo} alt=\"logo\"/>*/}\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li className=\"list-inline-item\">\r\n\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\thref=\"https://ketchupkungen.se/\"\r\n\t\t\t\t\t\t\t\tclassName=\"btn-floating btn-sm btn-tw  footer-link\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<MDBIcon fab icon=\"facebook-f\" />\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li className=\"list-inline-item\">\r\n\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\thref=\"https://ketchupkungen.se/\"\r\n\t\t\t\t\t\t\t\tclassName=\"btn-floating btn-sm btn-li footer-link\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<MDBIcon fab icon=\"instagram\" />\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</Footer>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default FooterPart;","import React from \"react\";\nimport firebase from \"../../firebase\";\n/*import {\n  Form,\n  Card,\n} from \"semantic-ui-react\";*/\nimport { MDBBtn, MDBCard, MDBCardBody } from \"mdbreact\";\nimport { Link } from \"react-router-dom\";\n\nimport FooterPart from './FooterPart';\n\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    errors: [],\n    loading: false\n  };\n\n  displayErrors = errors =>\n    errors.map((error, i) => <p key={i}>{error.message}</p>);\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.isFormValid(this.state)) {\n      this.setState({ errors: [], loading: true });\n      firebase\n        .auth()\n        .signInWithEmailAndPassword(this.state.email, this.state.password)\n        .then(signedInUser => {\n          console.log(signedInUser);\n        })\n        .catch(err => {\n          console.error(err);\n          this.setState({\n            errors: this.state.errors.concat(err),\n            loading: false\n          });\n        });\n    }\n  };\n\n  isFormValid = ({ email, password }) => email && password;\n\n  handleInputError = (errors, inputName) => {\n    return errors.some(error => error.message.toLowerCase().includes(inputName))\n      ? \"error\"\n      : \"\";\n  };\n\n  render() {\n    const { email, password, errors, loading } = this.state;\n\n    return (\n      <div>\n        <div className=\"login-page-desk\">\n          <MDBCard className=\"login-card\">\n            <MDBCardBody>\n              <h2>BearChat</h2>\n                <p style={{ color: '#A9A9A9'}}>Speak with the bears!</p>\n                <form\n                  className=\"needs-validation\"\n                  onSubmit={this.handleSubmit}\n                >\n                  <div className=\"login-field\">\n                    <input\n                      name=\"email\"\n                      placeholder=\"Email Address\"\n                      onChange={this.handleChange}\n                      value={email}\n                      className={this.handleInputError(errors, \"email\")}\n                      type=\"email\"\n                      spellCheck=\"false\"\n                    />\n                  </div>\n\n                  <div className=\"login-field\">\n                    <input\n                      name=\"password\"\n                      placeholder=\"Password\"\n                      onChange={this.handleChange}\n                      value={password}\n                      className={this.handleInputError(errors, \"password\")}\n                      type=\"password\"\n                      spellCheck=\"false\"\n                    />\n                  </div>\n                  <MDBBtn\n                    className=\"login-btn\"\n                    color=\"dark\"\n                    type=\"submit\"\n                    //disabled={loading}\n                    //className={loading ? \"loading\" : \"login-btn\"}\n                    >\n                    Login\n                  </MDBBtn>      \n                </form>\n                <hr/>\n                <p>Don't have an account? <Link to=\"/register\">Register</Link></p>\n                {errors.length > 0 && (\n                  <div>\n                    <h3 className=\"loginError\">Oh no!</h3>\n                    {this.displayErrors(errors)}\n                  </div>\n                )}\n              </MDBCardBody>\n            </MDBCard>\n          </div>\n          <div className=\"login-page-mobile\">\n            <h2>BearChat</h2>\n            <p style={{ color: '#A9A9A9'}}>Speak with the bears!</p>\n            <form\n              className=\"needs-validation\"\n              onSubmit={this.handleSubmit}\n            >\n              <div className=\"login-field\">\n                <input\n                  name=\"email\"\n                  placeholder=\"Email Address\"\n                  onChange={this.handleChange}\n                  value={email}\n                  className={\"form-control\" + this.handleInputError(errors, \"email\")}\n                  type=\"email\"\n                  spellCheck=\"false\"\n                />\n              </div>\n\n              <div className=\"login-field\">\n                <input\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  onChange={this.handleChange}\n                  value={password}\n                  className={\"form-control\" + this.handleInputError(errors, \"password\")}\n                  type=\"password\"\n                  spellCheck=\"false\"\n                />\n              </div>\n              <MDBBtn\n                color=\"dark\"\n                type=\"submit\"\n                className=\"login-btn\"\n                /*disabled={loading}\n                className={loading ? \"loading\" : \"login-btn\"}*/\n                >\n                Login\n              </MDBBtn>      \n            </form>\n            <p>Don't have an account? <Link to=\"/register\">Register</Link></p>\n            {errors.length > 0 && (\n              <div>\n                <h3 className=\"loginError\">Oh no!</h3>\n                {this.displayErrors(errors)}\n              </div>\n            )}\n          </div>\n          <FooterPart/>\n        </div>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport firebase from \"../../firebase\";\nimport md5 from \"md5\";\n\n\nimport { MDBBtn, MDBCard, MDBCardBody } from \"mdbreact\";\nimport { Link } from \"react-router-dom\";\n\nimport FooterPart from './FooterPart';\n\nclass Register extends React.Component {\n  state = {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirmation: \"\",\n    errors: [],\n    loading: false,\n    usersRef: firebase.database().ref(\"users\")\n  };\n\n  isFormValid = () => {\n    let errors = [];\n    let error;\n\n    if (this.isFormEmpty(this.state)) {\n      error = { message: \"Seems you didn't fill in all the fields\" };\n      this.setState({ errors: errors.concat(error) });\n      return false;\n    } else if (!this.isPasswordValid(this.state)) {\n      error = { message: \"Password is invalid\" };\n      this.setState({ errors: errors.concat(error) });\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  isFormEmpty = ({ username, email, password, passwordConfirmation }) => {\n    return (\n      !username.length ||\n      !email.length ||\n      !password.length ||\n      !passwordConfirmation.length\n    );\n  };\n\n  isPasswordValid = ({ password, passwordConfirmation }) => {\n    if (password.length < 6 || passwordConfirmation.length < 6) {\n      return false;\n    } else if (password !== passwordConfirmation) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  displayErrors = errors =>\n    errors.map((error, i) => <p key={i}>{error.message}</p>);\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.isFormValid()) {\n      this.setState({ errors: [], loading: true });\n      firebase\n        .auth()\n        .createUserWithEmailAndPassword(this.state.email, this.state.password)\n        .then(createdUser => {\n          console.log(createdUser);\n          createdUser.user\n            .updateProfile({\n              displayName: this.state.username,\n              photoURL: `http://gravatar.com/avatar/${md5(\n                createdUser.user.email\n              )}?d=identicon`\n            })\n            .then(() => {\n              this.saveUser(createdUser).then(() => {\n                console.log(\"user saved\");\n              });\n            })\n            .catch(err => {\n              console.error(err);\n              this.setState({\n                errors: this.state.errors.concat(err),\n                loading: false\n              });\n            });\n        })\n        .catch(err => {\n          console.error(err);\n          this.setState({\n            errors: this.state.errors.concat(err),\n            loading: false\n          });\n        });\n    }\n  };\n\n  saveUser = createdUser => {\n    return this.state.usersRef.child(createdUser.user.uid).set({\n      name: createdUser.user.displayName,\n      avatar: createdUser.user.photoURL\n    });\n  };\n\n  handleInputError = (errors, inputName) => {\n    return errors.some(error => error.message.toLowerCase().includes(inputName))\n      ? \"error\"\n      : \"\";\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      password,\n      passwordConfirmation,\n      errors,\n      loading\n    } = this.state;\n\n    return (\n      <div>\n        <div className=\"login-page-desk\">\n          <MDBCard className=\"register-card\">\n          <MDBCardBody>\n            <h2>BearChat</h2>\n              <p style={{ color: '#A9A9A9'}}>Speak with the bears!</p>\n                <form\n                  className=\"needs-validation\"\n                  onSubmit={this.handleSubmit}\n                >\n                  <div className=\"login-field\">\n                    <input\n                      name=\"username\"\n                      placeholder=\"Username\"\n                      onChange={this.handleChange}\n                      value={username}\n                      type=\"text\"\n                      spellCheck=\"false\"\n                    />\n                  </div>\n\n                  <div className=\"login-field\">\n                  <input\n                    name=\"email\"\n                    placeholder=\"Email Address\"\n                    onChange={this.handleChange}\n                    value={email}\n                    className={this.handleInputError(errors, \"email\")}\n                    type=\"email\"\n                    spellCheck=\"false\"\n                  />\n                  </div>\n\n                  <div className=\"login-field\">\n                  <input\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    onChange={this.handleChange}\n                    value={password}\n                    className={this.handleInputError(errors, \"password\")}\n                    type=\"password\"\n                    spellCheck=\"false\"\n                  />\n                  </div>\n\n                  <div className=\"login-field\">\n                  <input\n                    name=\"passwordConfirmation\"\n                    placeholder=\"Password Confirmation\"\n                    onChange={this.handleChange}\n                    value={passwordConfirmation}\n                    className={this.handleInputError(errors, \"password\")}\n                    type=\"password\"\n                    spellCheck=\"false\"\n                  />\n                  </div>\n\n                  <MDBBtn\n                  color=\"dark\"\n                  type=\"submit\" \n                  className=\"login-btn\"\n                  //disabled={loading}\n                  //className={loading ? \"loading\" : \"login-btn\"}\n                  >\n                  Register\n                </MDBBtn> \n              </form>\n              <hr/>\n              <p>Already a user? <Link to=\"/login\">Login</Link></p>\n              \n              {errors.length > 0 && (\n                <div className=\"loginError\">\n                  <hr/>\n                  <h3>Oh no!</h3>\n                  {this.displayErrors(errors)}\n                </div>\n              )}\n            </MDBCardBody>\n          </MDBCard>\n          \n          \n        </div>\n        <div className=\"login-page-mobile\">\n            <h2>BearChat</h2>\n            <p style={{ color: '#A9A9A9'}}>Speak with the bears!</p>\n            <form\n              className=\"needs-validation\"\n              onSubmit={this.handleSubmit}\n            >\n              <div className=\"login-field\">\n                <input\n                  name=\"username\"\n                  placeholder=\"Username\"\n                  onChange={this.handleChange}\n                  value={username}\n                  type=\"text\"\n                  spellCheck=\"false\"\n                />\n              </div>\n\n              <div className=\"login-field\">\n              <input\n                name=\"email\"\n                placeholder=\"Email Address\"\n                onChange={this.handleChange}\n                value={email}\n                className={this.handleInputError(errors, \"email\")}\n                type=\"email\"\n                spellCheck=\"false\"\n              />\n              </div>\n\n              <div className=\"login-field\">\n              <input\n                name=\"password\"\n                placeholder=\"Password\"\n                onChange={this.handleChange}\n                value={password}\n                className={this.handleInputError(errors, \"password\")}\n                type=\"password\"\n                spellCheck=\"false\"\n              />\n              </div>\n\n              <div className=\"login-field\">\n              <input\n                name=\"passwordConfirmation\"\n                placeholder=\"Password Confirmation\"\n                onChange={this.handleChange}\n                value={passwordConfirmation}\n                className={this.handleInputError(errors, \"password\")}\n                type=\"password\"\n                spellCheck=\"false\"\n              />\n              </div>\n              <MDBBtn\n                color=\"dark\"\n                type=\"submit\"\n                className=\"login-btn\"\n                /*disabled={loading}\n                className={loading ? \"loading\" : \"login-btn\"}*/\n                >\n                Register\n              </MDBBtn>      \n            </form>\n            <p>Already a user? <Link to=\"/Login\">Login</Link></p>\n            {errors.length > 0 && (\n              <div>\n                <h3 className=\"loginError\">Oh no!</h3>\n                {this.displayErrors(errors)}\n              </div>\n            )}\n          </div>\n          <FooterPart/>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n","import React from \"react\";\nimport { Loader, Dimmer } from \"semantic-ui-react\";\n\nconst Spinner = () => (\n  <Dimmer active>\n    <Loader size=\"huge\" content={\"Preparing Chat...\"} />\n  </Dimmer>\n);\n\nexport default Spinner;\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\nimport * as actionTypes from \"../actions/types\";\n\nconst initialUserState = {\n  currentUser: null,\n  isLoading: true\n};\n\nconst user_reducer = (state = initialUserState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_USER:\n      return {\n        currentUser: action.payload.currentUser,\n        isLoading: false\n      };\n    case actionTypes.CLEAR_USER:\n      return {\n        ...state,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n};\n\nconst initialChannelState = {\n  currentChannel: null,\n  isPrivateChannel: false,\n  userPosts: null\n};\n\nconst channel_reducer = (state = initialChannelState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_CURRENT_CHANNEL:\n      return {\n        ...state,\n        currentChannel: action.payload.currentChannel\n      };\n    case actionTypes.SET_PRIVATE_CHANNEL:\n      return {\n        ...state,\n        isPrivateChannel: action.payload.isPrivateChannel\n      };\n    case actionTypes.SET_USER_POSTS:\n      return {\n        ...state,\n        userPosts: action.payload.userPosts\n      };\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  user: user_reducer,\n  channel: channel_reducer\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport Profile from \"./components/Profile/Profile\";\nimport Login from \"./components/Auth/Login\";\nimport Register from \"./components/Auth/Register\";\nimport Spinner from \"./Spinner\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport firebase from \"./firebase\";\n\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\n//import \"mdbreact/dist/css/mdb.css\";\nimport \"./css/scss/mdb.scss\";\n//import \"./css/Style.css\";\nimport \"./css/scss/Style.scss\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  withRouter\n} from \"react-router-dom\";\n\nimport { createStore } from \"redux\";\nimport { Provider, connect } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./reducers\";\nimport { setUser, clearUser } from \"./actions\";\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nclass Root extends React.Component {\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        // console.log(user);\n        this.props.setUser(user);\n        this.props.history.push(\"/\");\n      } else {\n        this.props.history.push(\"/login\");\n        this.props.clearUser();\n      }\n    });\n  }\n\n  render() {\n    return this.props.isLoading ? (\n      <Spinner />\n    ) : (\n      <Switch>\n        <Route exact path=\"/\" component={App} />\n        <Route exact path=\"/Profile\" component={Profile} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/register\" component={Register} />\n      </Switch>\n    );\n  }\n}\n\nconst mapStateFromProps = state => ({\n  isLoading: state.user.isLoading\n});\n\nconst RootWithAuth = withRouter(\n  connect(\n    mapStateFromProps,\n    { setUser, clearUser }\n  )(Root)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <RootWithAuth />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();\n"],"sourceRoot":""}